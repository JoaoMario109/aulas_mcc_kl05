   1              		.cpu cortex-m0plus
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"heap_3.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.pvPortMalloc,"ax",%progbits
  18              		.align	2
  19              		.global	pvPortMalloc
  20              		.code	16
  21              		.thumb_func
  23              	pvPortMalloc:
  24              	.LFB0:
  25              		.file 1 "../freertos/heap_3.c"
   1:../freertos/heap_3.c **** /*
   2:../freertos/heap_3.c ****     FreeRTOS V9.0.0 - Copyright (C) 2016 Real Time Engineers Ltd.
   3:../freertos/heap_3.c ****     All rights reserved
   4:../freertos/heap_3.c **** 
   5:../freertos/heap_3.c ****     VISIT http://www.FreeRTOS.org TO ENSURE YOU ARE USING THE LATEST VERSION.
   6:../freertos/heap_3.c **** 
   7:../freertos/heap_3.c ****     This file is part of the FreeRTOS distribution.
   8:../freertos/heap_3.c **** 
   9:../freertos/heap_3.c ****     FreeRTOS is free software; you can redistribute it and/or modify it under
  10:../freertos/heap_3.c ****     the terms of the GNU General Public License (version 2) as published by the
  11:../freertos/heap_3.c ****     Free Software Foundation >>>> AND MODIFIED BY <<<< the FreeRTOS exception.
  12:../freertos/heap_3.c **** 
  13:../freertos/heap_3.c ****     ***************************************************************************
  14:../freertos/heap_3.c ****     >>!   NOTE: The modification to the GPL is included to allow you to     !<<
  15:../freertos/heap_3.c ****     >>!   distribute a combined work that includes FreeRTOS without being   !<<
  16:../freertos/heap_3.c ****     >>!   obliged to provide the source code for proprietary components     !<<
  17:../freertos/heap_3.c ****     >>!   outside of the FreeRTOS kernel.                                   !<<
  18:../freertos/heap_3.c ****     ***************************************************************************
  19:../freertos/heap_3.c **** 
  20:../freertos/heap_3.c ****     FreeRTOS is distributed in the hope that it will be useful, but WITHOUT ANY
  21:../freertos/heap_3.c ****     WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
  22:../freertos/heap_3.c ****     FOR A PARTICULAR PURPOSE.  Full license text is available on the following
  23:../freertos/heap_3.c ****     link: http://www.freertos.org/a00114.html
  24:../freertos/heap_3.c **** 
  25:../freertos/heap_3.c ****     ***************************************************************************
  26:../freertos/heap_3.c ****      *                                                                       *
  27:../freertos/heap_3.c ****      *    FreeRTOS provides completely free yet professionally developed,    *
  28:../freertos/heap_3.c ****      *    robust, strictly quality controlled, supported, and cross          *
  29:../freertos/heap_3.c ****      *    platform software that is more than just the market leader, it     *
  30:../freertos/heap_3.c ****      *    is the industry's de facto standard.                               *
  31:../freertos/heap_3.c ****      *                                                                       *
  32:../freertos/heap_3.c ****      *    Help yourself get started quickly while simultaneously helping     *
  33:../freertos/heap_3.c ****      *    to support the FreeRTOS project by purchasing a FreeRTOS           *
  34:../freertos/heap_3.c ****      *    tutorial book, reference manual, or both:                          *
  35:../freertos/heap_3.c ****      *    http://www.FreeRTOS.org/Documentation                              *
  36:../freertos/heap_3.c ****      *                                                                       *
  37:../freertos/heap_3.c ****     ***************************************************************************
  38:../freertos/heap_3.c **** 
  39:../freertos/heap_3.c ****     http://www.FreeRTOS.org/FAQHelp.html - Having a problem?  Start by reading
  40:../freertos/heap_3.c ****     the FAQ page "My application does not run, what could be wrong?".  Have you
  41:../freertos/heap_3.c ****     defined configASSERT()?
  42:../freertos/heap_3.c **** 
  43:../freertos/heap_3.c ****     http://www.FreeRTOS.org/support - In return for receiving this top quality
  44:../freertos/heap_3.c ****     embedded software for free we request you assist our global community by
  45:../freertos/heap_3.c ****     participating in the support forum.
  46:../freertos/heap_3.c **** 
  47:../freertos/heap_3.c ****     http://www.FreeRTOS.org/training - Investing in training allows your team to
  48:../freertos/heap_3.c ****     be as productive as possible as early as possible.  Now you can receive
  49:../freertos/heap_3.c ****     FreeRTOS training directly from Richard Barry, CEO of Real Time Engineers
  50:../freertos/heap_3.c ****     Ltd, and the world's leading authority on the world's leading RTOS.
  51:../freertos/heap_3.c **** 
  52:../freertos/heap_3.c ****     http://www.FreeRTOS.org/plus - A selection of FreeRTOS ecosystem products,
  53:../freertos/heap_3.c ****     including FreeRTOS+Trace - an indispensable productivity tool, a DOS
  54:../freertos/heap_3.c ****     compatible FAT file system, and our tiny thread aware UDP/IP stack.
  55:../freertos/heap_3.c **** 
  56:../freertos/heap_3.c ****     http://www.FreeRTOS.org/labs - Where new FreeRTOS products go to incubate.
  57:../freertos/heap_3.c ****     Come and try FreeRTOS+TCP, our new open source TCP/IP stack for FreeRTOS.
  58:../freertos/heap_3.c **** 
  59:../freertos/heap_3.c ****     http://www.OpenRTOS.com - Real Time Engineers ltd. license FreeRTOS to High
  60:../freertos/heap_3.c ****     Integrity Systems ltd. to sell under the OpenRTOS brand.  Low cost OpenRTOS
  61:../freertos/heap_3.c ****     licenses offer ticketed support, indemnification and commercial middleware.
  62:../freertos/heap_3.c **** 
  63:../freertos/heap_3.c ****     http://www.SafeRTOS.com - High Integrity Systems also provide a safety
  64:../freertos/heap_3.c ****     engineered and independently SIL3 certified version for use in safety and
  65:../freertos/heap_3.c ****     mission critical applications that require provable dependability.
  66:../freertos/heap_3.c **** 
  67:../freertos/heap_3.c ****     1 tab == 4 spaces!
  68:../freertos/heap_3.c **** */
  69:../freertos/heap_3.c **** 
  70:../freertos/heap_3.c **** 
  71:../freertos/heap_3.c **** /*
  72:../freertos/heap_3.c ****  * Implementation of pvPortMalloc() and vPortFree() that relies on the
  73:../freertos/heap_3.c ****  * compilers own malloc() and free() implementations.
  74:../freertos/heap_3.c ****  *
  75:../freertos/heap_3.c ****  * This file can only be used if the linker is configured to to generate
  76:../freertos/heap_3.c ****  * a heap memory area.
  77:../freertos/heap_3.c ****  *
  78:../freertos/heap_3.c ****  * See heap_1.c, heap_2.c and heap_4.c for alternative implementations, and the
  79:../freertos/heap_3.c ****  * memory management pages of http://www.FreeRTOS.org for more information.
  80:../freertos/heap_3.c ****  */
  81:../freertos/heap_3.c **** 
  82:../freertos/heap_3.c **** #include <stdlib.h>
  83:../freertos/heap_3.c **** 
  84:../freertos/heap_3.c **** /* Defining MPU_WRAPPERS_INCLUDED_FROM_API_FILE prevents task.h from redefining
  85:../freertos/heap_3.c **** all the API functions to use the MPU wrappers.  That should only be done when
  86:../freertos/heap_3.c **** task.h is included from an application file. */
  87:../freertos/heap_3.c **** #define MPU_WRAPPERS_INCLUDED_FROM_API_FILE
  88:../freertos/heap_3.c **** 
  89:../freertos/heap_3.c **** #include "FreeRTOS.h"
  90:../freertos/heap_3.c **** #include "task.h"
  91:../freertos/heap_3.c **** 
  92:../freertos/heap_3.c **** #undef MPU_WRAPPERS_INCLUDED_FROM_API_FILE
  93:../freertos/heap_3.c **** 
  94:../freertos/heap_3.c **** #if( configSUPPORT_DYNAMIC_ALLOCATION == 0 )
  95:../freertos/heap_3.c **** 	#error This file must not be used if configSUPPORT_DYNAMIC_ALLOCATION is 0
  96:../freertos/heap_3.c **** #endif
  97:../freertos/heap_3.c **** 
  98:../freertos/heap_3.c **** /*-----------------------------------------------------------*/
  99:../freertos/heap_3.c **** 
 100:../freertos/heap_3.c **** void *pvPortMalloc( size_t xWantedSize )
 101:../freertos/heap_3.c **** {
  26              		.loc 1 101 0
  27              		.cfi_startproc
  28 0000 80B5     		push	{r7, lr}
  29              		.cfi_def_cfa_offset 8
  30              		.cfi_offset 7, -8
  31              		.cfi_offset 14, -4
  32 0002 84B0     		sub	sp, sp, #16
  33              		.cfi_def_cfa_offset 24
  34 0004 00AF     		add	r7, sp, #0
  35              		.cfi_def_cfa_register 7
  36 0006 7860     		str	r0, [r7, #4]
 102:../freertos/heap_3.c **** void *pvReturn;
 103:../freertos/heap_3.c **** 
 104:../freertos/heap_3.c **** 	vTaskSuspendAll();
  37              		.loc 1 104 0
  38 0008 FFF7FEFF 		bl	vTaskSuspendAll
 105:../freertos/heap_3.c **** 	{
 106:../freertos/heap_3.c **** 		pvReturn = malloc( xWantedSize );
  39              		.loc 1 106 0
  40 000c 7B68     		ldr	r3, [r7, #4]
  41 000e 181C     		mov	r0, r3
  42 0010 FFF7FEFF 		bl	malloc
  43 0014 031C     		mov	r3, r0
  44 0016 FB60     		str	r3, [r7, #12]
 107:../freertos/heap_3.c **** 		traceMALLOC( pvReturn, xWantedSize );
 108:../freertos/heap_3.c **** 	}
 109:../freertos/heap_3.c **** 	( void ) xTaskResumeAll();
  45              		.loc 1 109 0
  46 0018 FFF7FEFF 		bl	xTaskResumeAll
 110:../freertos/heap_3.c **** 
 111:../freertos/heap_3.c **** 	#if( configUSE_MALLOC_FAILED_HOOK == 1 )
 112:../freertos/heap_3.c **** 	{
 113:../freertos/heap_3.c **** 		if( pvReturn == NULL )
 114:../freertos/heap_3.c **** 		{
 115:../freertos/heap_3.c **** 			extern void vApplicationMallocFailedHook( void );
 116:../freertos/heap_3.c **** 			vApplicationMallocFailedHook();
 117:../freertos/heap_3.c **** 		}
 118:../freertos/heap_3.c **** 	}
 119:../freertos/heap_3.c **** 	#endif
 120:../freertos/heap_3.c **** 
 121:../freertos/heap_3.c **** 	return pvReturn;
  47              		.loc 1 121 0
  48 001c FB68     		ldr	r3, [r7, #12]
 122:../freertos/heap_3.c **** }
  49              		.loc 1 122 0
  50 001e 181C     		mov	r0, r3
  51 0020 BD46     		mov	sp, r7
  52 0022 04B0     		add	sp, sp, #16
  53              		@ sp needed
  54 0024 80BD     		pop	{r7, pc}
  55              		.cfi_endproc
  56              	.LFE0:
  58 0026 C046     		.section	.text.vPortFree,"ax",%progbits
  59              		.align	2
  60              		.global	vPortFree
  61              		.code	16
  62              		.thumb_func
  64              	vPortFree:
  65              	.LFB1:
 123:../freertos/heap_3.c **** /*-----------------------------------------------------------*/
 124:../freertos/heap_3.c **** 
 125:../freertos/heap_3.c **** void vPortFree( void *pv )
 126:../freertos/heap_3.c **** {
  66              		.loc 1 126 0
  67              		.cfi_startproc
  68 0000 80B5     		push	{r7, lr}
  69              		.cfi_def_cfa_offset 8
  70              		.cfi_offset 7, -8
  71              		.cfi_offset 14, -4
  72 0002 82B0     		sub	sp, sp, #8
  73              		.cfi_def_cfa_offset 16
  74 0004 00AF     		add	r7, sp, #0
  75              		.cfi_def_cfa_register 7
  76 0006 7860     		str	r0, [r7, #4]
 127:../freertos/heap_3.c **** 	if( pv )
  77              		.loc 1 127 0
  78 0008 7B68     		ldr	r3, [r7, #4]
  79 000a 002B     		cmp	r3, #0
  80 000c 07D0     		beq	.L3
 128:../freertos/heap_3.c **** 	{
 129:../freertos/heap_3.c **** 		vTaskSuspendAll();
  81              		.loc 1 129 0
  82 000e FFF7FEFF 		bl	vTaskSuspendAll
 130:../freertos/heap_3.c **** 		{
 131:../freertos/heap_3.c **** 			free( pv );
  83              		.loc 1 131 0
  84 0012 7B68     		ldr	r3, [r7, #4]
  85 0014 181C     		mov	r0, r3
  86 0016 FFF7FEFF 		bl	free
 132:../freertos/heap_3.c **** 			traceFREE( pv, 0 );
 133:../freertos/heap_3.c **** 		}
 134:../freertos/heap_3.c **** 		( void ) xTaskResumeAll();
  87              		.loc 1 134 0
  88 001a FFF7FEFF 		bl	xTaskResumeAll
  89              	.L3:
 135:../freertos/heap_3.c **** 	}
 136:../freertos/heap_3.c **** }
  90              		.loc 1 136 0
  91 001e BD46     		mov	sp, r7
  92 0020 02B0     		add	sp, sp, #8
  93              		@ sp needed
  94 0022 80BD     		pop	{r7, pc}
  95              		.cfi_endproc
  96              	.LFE1:
  98              		.text
  99              	.Letext0:
 100              		.file 2 "c:\\freescale\\kds_v3\\toolchain\\lib\\gcc\\arm-none-eabi\\4.8.4\\include\\stddef.h"
DEFINED SYMBOLS
                            *ABS*:00000000 heap_3.c
C:\Users\mathe\AppData\Local\Temp\ccPGD0JO.s:18     .text.pvPortMalloc:00000000 $t
C:\Users\mathe\AppData\Local\Temp\ccPGD0JO.s:23     .text.pvPortMalloc:00000000 pvPortMalloc
C:\Users\mathe\AppData\Local\Temp\ccPGD0JO.s:59     .text.vPortFree:00000000 $t
C:\Users\mathe\AppData\Local\Temp\ccPGD0JO.s:64     .text.vPortFree:00000000 vPortFree
                     .debug_frame:00000010 $d
                           .group:00000000 wm4.0.e19fef13b9966be9a9a0df56dde4c190
                           .group:00000000 wm4.newlib.h.8.fec018e441fee7bfa1923812ad010f97
                           .group:00000000 wm4.features.h.22.6a4ca7cd053637cc1d0db6c16f39b2d7
                           .group:00000000 wm4.config.h.212.4163ef2871a828c674038d036b081cfd
                           .group:00000000 wm4._ansi.h.23.2147fde150631f5584b9dc29b914d1b8
                           .group:00000000 wm4.stdlib.h.13.4ed386f5c1a80d71e72172885d946ef2
                           .group:00000000 wm4.stddef.h.184.aa65fb7281d578229bbad41b91862635
                           .group:00000000 wm4.stddef.h.39.d0197034aa5fd947cae140b9289e6734
                           .group:00000000 wm4._default_types.h.6.9e4229723f5523536bc8f574589d6a99
                           .group:00000000 wm4.lock.h.2.9bc98482741e5e2a9450b12934a684ea
                           .group:00000000 wm4._types.h.54.d3d34a3b7f3cc230cd159baf022b4b08
                           .group:00000000 wm4.stddef.h.158.61317cdbfb4026324507d123a50b0fd6
                           .group:00000000 wm4.reent.h.17.8bd9e4098e0428508c282cad794fae43
                           .group:00000000 wm4.stdlib.h.53.a73f7e963d962393b7f9086194931e4a
                           .group:00000000 wm4.stdint.h.10.d0f8e374834fcfc2e296d5d5fe82f02a
                           .group:00000000 wm4.FreeRTOSConfig.h.71.9ce5dd93bb084cb2714008d9030c087d
                           .group:00000000 wm4.projdefs.h.71.6ed2b4e07820ea275c61d78138cfae10
                           .group:00000000 wm4.portmacro.h.72.32efb3512b0394b29d8211ba7ab279d9
                           .group:00000000 wm4.portable.h.106.61ffdda1afafb5a5e1f7197ade95b43a
                           .group:00000000 wm4.mpu_wrappers.h.71.c0872672d360e197b5a999335351843d
                           .group:00000000 wm4.FreeRTOS.h.186.2e14eee2d995e9702d028b4adcebc296
                           .group:00000000 wm4.list.h.103.6a12b7b9a7a136c3cca0ee53675c5498
                           .group:00000000 wm4.task.h.88.c21feabc7be8ca1396f9c7c7a7eaee9b

UNDEFINED SYMBOLS
vTaskSuspendAll
malloc
xTaskResumeAll
free
