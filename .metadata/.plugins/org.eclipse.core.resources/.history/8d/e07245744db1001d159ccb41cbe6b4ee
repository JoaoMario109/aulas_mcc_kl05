#include "mcu_general_config.h"
#include "generic_drivers/lcd/lcd.h"
#include "libraries/delay/delay.h"
#include "libraries/emb_util/emb_util.h"
#include "drivers/port/port.h"
#include "drivers/gpio/gpio.h"
#include "drivers/tpm/tpm.h"

void TPM0_IRQHandler(void)
{
	if( TPM_GetIRQFlag( TPM0 ) )
    {
        GPIO_TogglePin( GPIOB, 9 );
    }

	TPM_ClearIRQFlag( TPM0 );
}

int main(void)
{
	const uint16_t tpmPwmModulo = 0xBFFFU;

	/*Define como fonte de clock do contador o FLL que gera 20.971520 MHz.*/
	TPM_SetCounterClkSrc( TPM0, TPM_CNT_CLOCK_FLL );
	/*Inicializa TPM0, dividindo clock de entrada por 128, resultando em
	* um clock do contador de 20,971520 MHz/128 = 163.840 Hz.
	* Dessa forma, a frequência de fim de contagem é de 163.840 Hz*tpmPwmModulo */
	TPM_Init( TPM0, tpmPwmModulo, TPM_PRESCALER_DIV_128 );

	PORT_Init( PORTB );
	GPIO_InitOutputPin( GPIOB, 9, 1 );

	NVIC_EnableIRQ( TPM0_IRQn );

	Delay_Init( );
	TPM_InitCounter( TPM0 ); /*Inicializa registrador contador*/

    for ( ; ; )
    {

    }

    return 0;
}
